name: Multi cluster; two clusters on default network with registry

on:
  [workflow_dispatch, push]
jobs:
  k3d-multicluster-demo:
    name: Two clusters on default network with registry
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        id: test-cluster-1
        name: "Create 1st k3d Cluster with Registry"
        with:
          k3d-name: "test-cluster-1"
          k3d-registry: true
          k3d-args: >-
            --agents 1
            --no-lb
            --k3s-server-arg "--no-deploy=traefik,servicelb,metrics-server"
      - uses: ./
        id: test-cluster-2
        name: "Create 2nd k3d Cluster with Registry"
        with:
          k3d-name: "test-cluster-2"
          k3d-registry: true
          k3d-args: >-
            --agents 1
            --no-lb
            --k3s-server-arg "--no-deploy=traefik,servicelb,metrics-server"

      - name: Cluster info
        run: |
          echo test-cluster-1: ${{ steps.test-cluster-1.outputs.k3d-network }} ${{ steps.test-cluster-1.outputs.k3d-subnet }}
          echo test-cluster-2: ${{ steps.test-cluster-2.outputs.k3d-network }} ${{ steps.test-cluster-2.outputs.k3d-subnet }}
          echo
          kubectl cluster-info --context k3d-test-cluster-1 && kubectl cluster-info --context k3d-test-cluster-2
      - name: Nodes
        # hack, wait until all agents are ready.
        run: |
          docker ps -a
          sleep 5
          kubectl config use-context k3d-test-cluster-1
          kubectl get nodes -o wide
          kubectl config use-context k3d-test-cluster-2
          kubectl get nodes -o wide
      - name: Network
        run: docker network inspect k3d-action-bridge-network
